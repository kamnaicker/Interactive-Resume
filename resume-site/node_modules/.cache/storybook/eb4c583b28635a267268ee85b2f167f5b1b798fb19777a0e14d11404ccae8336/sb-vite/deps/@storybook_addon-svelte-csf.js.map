{
  "version": 3,
  "sources": ["../../../../../@storybook/addon-svelte-csf/dist/runtime/contexts/template.svelte.js", "../../../../../@storybook/addon-svelte-csf/dist/runtime/Story.svelte", "../../../../../@storybook/addon-svelte-csf/dist/runtime/LegacyMeta.svelte", "../../../../../@storybook/addon-svelte-csf/dist/runtime/LegacyStory.svelte", "../../../../../@storybook/addon-svelte-csf/dist/runtime/LegacyTemplate.svelte", "../../../../../@storybook/addon-svelte-csf/dist/index.js"],
  "sourcesContent": ["import { getContext, hasContext, setContext } from 'svelte';\nconst CONTEXT_KEYS = 'storybook-stories-template-snippet-context';\nfunction buildContext() {\n    let template = $state();\n    function set(snippet) {\n        template = snippet;\n    }\n    return {\n        get template() {\n            return template;\n        },\n        set,\n    };\n}\nexport function useStoriesTemplate() {\n    if (!hasContext(CONTEXT_KEYS)) {\n        setContext(CONTEXT_KEYS, buildContext());\n    }\n    return getContext(CONTEXT_KEYS).template;\n}\nexport function setTemplate(snippet) {\n    if (!hasContext(CONTEXT_KEYS)) {\n        setContext(CONTEXT_KEYS, buildContext());\n    }\n    const ctx = getContext(CONTEXT_KEYS);\n    ctx.set(snippet);\n}\n", "<script lang=\"ts\" generics=\"const TCmp extends Cmp\">\n  import type { Snippet } from 'svelte';\n\n  import { useStoriesExtractor } from './contexts/extractor.svelte.js';\n  import { useStoryRenderer, type StoryRendererContext } from './contexts/renderer.svelte.js';\n  import { useStoriesTemplate } from './contexts/template.svelte.js';\n\n  import { storyNameToExportName } from '../utils/identifier-utils.js';\n  import type { Cmp, StoryAnnotations } from '../types.js';\n\n  type Props = Partial<StoryAnnotations<TCmp>> & {\n    /**\n     * @deprecated\n     * Use `exportName` instead.\n     */\n    id?: never;\n    /**\n     * The content to render in the story, either as:\n     * 1. A snippet taking args and storyContext as parameters\n     * 2. Static markup\n     *\n     * Can be omitted if a default template is set with [`setTemplate()`](https://github.com/storybookjs/addon-svelte-csf/blob/main/README.md#default-snippet)\n     */\n    children?: Snippet<\n      /* prettier ignore */\n      [StoryRendererContext<TCmp>['args'], StoryRendererContext<TCmp>['storyContext']]\n    >;\n    /**\n     * Name of the story. Can be omitted if `exportName` is provided.\n     */\n    name?: string;\n    /**\n     * exportName of the story.\n     * If not provided, it will be generated from the 'name', by converting it to a valid, PascalCased JS variable name.\n     * eg. 'My story!' -> 'MyStory'\n     *\n     * Use this prop to explicitly set the export name of the story. This is useful if you have multiple stories with the names\n     * that result in duplicate export names like \"My story\" and \"My story!\".\n     * It's also useful for explicitly defining the export that can be imported in MDX docs.\n     */\n    exportName?: string;\n    /**\n     * @deprecrated\n     * Use `tags={['autodocs']}` instead.\n     * @see {@link https://github.com/storybookjs/addon-svelte-csf/blob/main/MIGRATION.md#story-prop-autodocs-has-been-removed}\n     */\n    autodocs?: never;\n    /**\n     * @deprecated\n     * Use `parameters={{ docs: { source: { code: \"...\" } } }}` instead.\n     * @see {@link https://github.com/storybookjs/addon-svelte-csf/blob/next/MIGRATION.md#story-prop-source-has-been-removed}\n     */\n    source?: never;\n  } & (\n      | {\n          /**\n           * exportName of the story.\n           * If not provided, it will be generated from the 'name', by converting it to a valid, PascalCased JS variable name.\n           * eg. 'My story!' -> 'MyStory'\n           *\n           * Use this prop to explicitly set the export name of the story. This is useful if you have multiple stories with the names\n           * that result in duplicate export names like \"My story\" and \"My story!\".\n           * It's also useful for explicitly defining the export that can be imported in MDX docs.\n           */\n          exportName: string;\n        }\n      | {\n          /**\n           * Name of the story. Can be omitted if `exportName` is provided.\n           */\n          name: string;\n        }\n    );\n\n  const { children, name, exportName: exportNameProp, play, ...restProps }: Props = $props();\n  const exportName = exportNameProp ?? storyNameToExportName(name!);\n\n  const extractor = useStoriesExtractor<TCmp>();\n  const renderer = useStoryRenderer<TCmp>();\n  const template = useStoriesTemplate<TCmp>();\n\n  const isCurrentlyViewed = $derived(\n    !extractor.isExtracting && renderer.currentStoryExportName === exportName\n  );\n\n  if (extractor.isExtracting) {\n    extractor.register({ children, name, exportName, play, ...restProps } as Parameters<\n      (typeof extractor)['register']\n    >[0]);\n  }\n\n  function injectIntoPlayFunction(\n    storyContext: typeof renderer.storyContext,\n    playToInject: typeof play\n  ) {\n    if (playToInject && storyContext.playFunction) {\n      storyContext.playFunction.__play = playToInject;\n    }\n  }\n\n  $effect(() => {\n    if (isCurrentlyViewed) {\n      injectIntoPlayFunction(renderer.storyContext, play);\n    }\n  });\n</script>\n\n{#if isCurrentlyViewed}\n  {#if children}\n    {@render children(renderer.args, renderer.storyContext)}\n  {:else if template}\n    {@render template(renderer.args, renderer.storyContext)}\n  {:else if renderer.storyContext.component}\n    <renderer.storyContext.component {...renderer.args} />\n  {:else}\n    <p>\n      No story rendered. See <a\n        href=\"https://github.com/storybookjs/addon-svelte-csf#defining-stories\"\n        target=\"_blank\">the docs</a\n      > on how to define stories.\n    </p>\n  {/if}\n{/if}\n", "import 'svelte/internal/disclose-version';\nimport 'svelte/internal/flags/legacy';\n\nLegacyMeta[$.FILENAME] = 'node_modules/@storybook/addon-svelte-csf/dist/runtime/LegacyMeta.svelte';\n\nimport * as $ from 'svelte/internal/client';\n\nfunction LegacyMeta($$anchor, $$props) {\n\t$.check_target(new.target);\n\t$.push($$props, false, LegacyMeta);\n\treturn $.pop({ ...$.legacy_api() });\n}\n\nif (import.meta.hot) {\n\tLegacyMeta = $.hmr(LegacyMeta, () => LegacyMeta[$.HMR].source);\n\n\timport.meta.hot.accept((module) => {\n\t\tmodule.default[$.HMR].source = LegacyMeta[$.HMR].source;\n\t\t$.set(LegacyMeta[$.HMR].source, module.default[$.HMR].original);\n\t});\n}\n\nexport default LegacyMeta;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IiIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiTGVnYWN5TWV0YS5zdmVsdGUiXX0=", "<!--\n@component\nThis component is to support deprecated legacy component - `Story`,\nand this component functionality is just a \"mock\".\nE.g. to allow user still have typing experience.\nVite pre-transform hook does codemod where this component gets transformed into new `Story` component destrucutred from `defineMeta`.\n\n@deprecated\n@see {@link https://github.com/storybookjs/addon-svelte-csf/blob/main/MIGRATION.md#export-meta-removed-in-favor-of-definemeta}\n-->\n\n<script lang=\"ts\">\n  import type { Slots, StoryProps } from '../legacy-types.d.ts';\n\n  type $$Props = StoryProps;\n  type $$Slots = Slots;\n\n  let args: $$Slots['default']['args'];\n  let context: $$Slots['default']['context'];\n</script>\n\n<slot {context} {args} />\n", "<!--\n@component\nThis component is to support deprecated legacy component - `Template`,\nand this component functionality is just a \"mock\".\nE.g. to allow user still have typing experience.\nVite pre-transform hook does codemod where this component gets transformed into Svelte v5 snippet block.\n\n@deprecated\n@see {@link https://github.com/storybookjs/addon-svelte-csf/blob/main/MIGRATION.md#template-component-removed}\n-->\n<script lang=\"ts\">\n  import type { Slots, TemplateProps } from '../legacy-types.d.ts';\n\n  export let id: string = 'default';\n  // silents the Svelte warning about 'id' being unused. It's only here for typing purposes.\n  const silentWarningAboutId = id;\n\n  type $$Props = TemplateProps;\n  type $$Slots = Slots;\n\n  let args: $$Slots['default']['args'];\n  let context: $$Slots['default']['context'];\n</script>\n\n<slot {context} {args} />\n", "import StoryComponent from './runtime/Story.svelte';\n// TODO: Remove in next major release\nimport LegacyMetaComponent from './runtime/LegacyMeta.svelte';\n// TODO: Remove in next major release\nimport LegacyStoryComponent from './runtime/LegacyStory.svelte';\n// TODO: Remove in next major release\nimport LegacyTemplateComponent from './runtime/LegacyTemplate.svelte';\nexport { setTemplate } from './runtime/contexts/template.svelte';\nexport function defineMeta(_meta) {\n    return {\n        Story: StoryComponent,\n    };\n}\n// TODO: Remove in next major release\nexport { \n/**\n * @deprecated Use `defineMeta` instead\n * @see {@link https://github.com/storybookjs/addon-svelte-csf/blob/main/MIGRATION.md#meta-component-removed-in-favor-of-definemeta}\n */\nLegacyMetaComponent as Meta, \n/**\n * @deprecated Use `Story` component returned from `defineMeta` instead\n * @see {@link https://github.com/storybookjs/addon-svelte-csf/blob/main/MIGRATION.md#export-meta-removed-in-favor-of-definemeta}\n */\nLegacyStoryComponent as Story, \n/**\n * @deprecated Use snippets instead\n * @see {@link https://github.com/storybookjs/addon-svelte-csf/blob/main/MIGRATION.md#template-component-removed}\n */\nLegacyTemplateComponent as Template, };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACM,eAAe;SACZ,eAAe;MAChBA,YAAQ,MAAA,MAAA;WACHC,KAAIC,UAAS;QAClBF,WAAWE,UAAO,IAAA;EACtB;;QAEQ,WAAW;iBACJF,SAAQ;IACnB;IACA,KAAAC;;AAER;SACgB,qBAAqB;OAC5B,WAAW,YAAY,GAAG;AAC3B,eAAW,cAAc,aAAY,CAAA;EACzC;SACO,WAAW,YAAY,EAAE;AACpC;SACgB,YAAYC,UAAS;OAC5B,WAAW,YAAY,GAAG;AAC3B,eAAW,cAAc,aAAY,CAAA;EACzC;QACM,MAAM,WAAW,YAAY;AACnC,MAAI,IAAIA,QAAO;AACnB;;;;;;;;QCgD+D,YAAS;;;;;;;;;;;;;QAChE,aAAU,QAAA,cAAqB,sBAAqB,QAAA,IAAA;QAEpD,YAAY,oBAAmB;QAC/B,WAAW,iBAAgB;QAC3BC,YAAW,mBAAkB;QAE7B,oBAAiB,aAAA,MAAA,CACpB,UAAU,gBAAY,cAAI,SAAS,wBAA2B,UAAA,CAAA;MAG7D,UAAU,cAAc;AAC1B,cAAU,SAAQ;MAAG,UAAQ,QAAA;MAAE,MAAI,QAAA;MAAE;MAAY,MAAI,QAAA;SAAK;;EAG5D;WAES,uBACP,cACA,cACA;QACI,gBAAgB,aAAa,cAAc;AAC7C,mBAAa,aAAa,SAAS;IACrC;EACF;AAEA,EAAA,YAAO,MAAO;YACR,iBAAiB,GAAE;AACrB,6BAAuB,SAAS,cAAY,QAAA,IAAA;IAC9C;EACF,CAAC;;;;;;;;;;;wDAKmB,SAAS,MAAI,MAAE,SAAS,YAAY;;;;;;AAE7C,cAAAA,UAAQC,WAAA,MAAC,SAAS,MAAI,MAAE,SAAS,YAAY;;;;;;;;8DAEjB,SAAS,IAAI,CAAA;;;;;;;;;;;wBAD1C,SAAS,aAAa,UAAS,UAAA,YAAA;wBAAA,UAAA,aAAA,KAAA;;;;;;;;;oBAF/BD,UAAQ,UAAA,YAAA;oBAAA,UAAA,aAAA,KAAA;;;;;;;;;;;;;;cAHf,iBAAiB,EAAA,UAAA,YAAA;;;;;;;;;;;;;;;;ACxGtB,WAAa,QAAQ,IAAI;AAIzB,SAAS,WAAW,UAAU,SAAS;AACtC,EAAE,aAAa,UAAU;AACzB,EAAE,KAAK,SAAS,OAAO,UAAU;AACjC,SAAS,IAAI,EAAE,GAAK,WAAW,EAAE,CAAC;AACnC;AAEA,IAAI,YAAY,KAAK;AACpB,eAAe,IAAI,YAAY,MAAM,WAAa,GAAG,EAAE,MAAM;AAE7D,cAAY,IAAI,OAAO,CAAC,WAAW;AAClC,WAAO,QAAU,GAAG,EAAE,SAAS,WAAa,GAAG,EAAE;AACjD,IAAE,IAAI,WAAa,GAAG,EAAE,QAAQ,OAAO,QAAU,GAAG,EAAE,QAAQ;AAAA,EAC/D,CAAC;AACF;AAEA,IAAO,qBAAQ;;;;;;;MCLT;MACA;;;;;;;;;;;;;;;;;;;;;MCLO,KAAU,KAAA,SAAA,MAAA,GAAG,SAAS;QAE3B,uBAAuB,GAAE;MAK3B;MACA;;;;;;;;;;;;;;;;;ACbC,SAAS,WAAW,OAAO;AAC9B,SAAO;AAAA,IACH,OAAO;AAAA,EACX;AACJ;",
  "names": ["template", "set", "snippet", "template", "$$anchor"]
}
